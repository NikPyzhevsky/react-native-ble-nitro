///
/// HybridNativeBleNitroSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridNativeBleNitroSpec.hpp"

namespace margelo::nitro::co::zyke::ble {

  void HybridNativeBleNitroSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("setRestoreStateCallback", &HybridNativeBleNitroSpec::setRestoreStateCallback);
      prototype.registerHybridMethod("startScan", &HybridNativeBleNitroSpec::startScan);
      prototype.registerHybridMethod("stopScan", &HybridNativeBleNitroSpec::stopScan);
      prototype.registerHybridMethod("isScanning", &HybridNativeBleNitroSpec::isScanning);
      prototype.registerHybridMethod("getConnectedDevices", &HybridNativeBleNitroSpec::getConnectedDevices);
      prototype.registerHybridMethod("getBondedDevices", &HybridNativeBleNitroSpec::getBondedDevices);
      prototype.registerHybridMethod("connect", &HybridNativeBleNitroSpec::connect);
      prototype.registerHybridMethod("createBond", &HybridNativeBleNitroSpec::createBond);
      prototype.registerHybridMethod("disconnect", &HybridNativeBleNitroSpec::disconnect);
      prototype.registerHybridMethod("isConnected", &HybridNativeBleNitroSpec::isConnected);
      prototype.registerHybridMethod("requestMTU", &HybridNativeBleNitroSpec::requestMTU);
      prototype.registerHybridMethod("readRSSI", &HybridNativeBleNitroSpec::readRSSI);
      prototype.registerHybridMethod("discoverServices", &HybridNativeBleNitroSpec::discoverServices);
      prototype.registerHybridMethod("getServices", &HybridNativeBleNitroSpec::getServices);
      prototype.registerHybridMethod("getCharacteristics", &HybridNativeBleNitroSpec::getCharacteristics);
      prototype.registerHybridMethod("readCharacteristic", &HybridNativeBleNitroSpec::readCharacteristic);
      prototype.registerHybridMethod("writeCharacteristic", &HybridNativeBleNitroSpec::writeCharacteristic);
      prototype.registerHybridMethod("subscribeToCharacteristic", &HybridNativeBleNitroSpec::subscribeToCharacteristic);
      prototype.registerHybridMethod("unsubscribeFromCharacteristic", &HybridNativeBleNitroSpec::unsubscribeFromCharacteristic);
      prototype.registerHybridMethod("requestBluetoothEnable", &HybridNativeBleNitroSpec::requestBluetoothEnable);
      prototype.registerHybridMethod("state", &HybridNativeBleNitroSpec::state);
      prototype.registerHybridMethod("subscribeToStateChange", &HybridNativeBleNitroSpec::subscribeToStateChange);
      prototype.registerHybridMethod("unsubscribeFromStateChange", &HybridNativeBleNitroSpec::unsubscribeFromStateChange);
      prototype.registerHybridMethod("openSettings", &HybridNativeBleNitroSpec::openSettings);
    });
  }

} // namespace margelo::nitro::co::zyke::ble
