///
/// ManufacturerData.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `ManufacturerData`, backed by a C++ struct.
 */
public typealias ManufacturerData = margelo.nitro.co.zyke.ble.ManufacturerData

public extension ManufacturerData {
  private typealias bridge = margelo.nitro.co.zyke.ble.bridge.swift

  /**
   * Create a new instance of `ManufacturerData`.
   */
  init(companyIdentifiers: [ManufacturerDataEntry]) {
    self.init({ () -> bridge.std__vector_ManufacturerDataEntry_ in
      var __vector = bridge.create_std__vector_ManufacturerDataEntry_(companyIdentifiers.count)
      for __item in companyIdentifiers {
        __vector.push_back(__item)
      }
      return __vector
    }())
  }

  var companyIdentifiers: [ManufacturerDataEntry] {
    @inline(__always)
    get {
      return self.__companyIdentifiers.map({ __item in __item })
    }
    @inline(__always)
    set {
      self.__companyIdentifiers = { () -> bridge.std__vector_ManufacturerDataEntry_ in
        var __vector = bridge.create_std__vector_ManufacturerDataEntry_(newValue.count)
        for __item in newValue {
          __vector.push_back(__item)
        }
        return __vector
      }()
    }
  }
}
